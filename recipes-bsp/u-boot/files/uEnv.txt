altbootcmd=run mender_altbootcmd; run bootcmd
baudrate=115200
boot_a_script=load ${devtype} ${mender_uboot_dev}:${bootpart} ${scriptaddr} ${prefix}${script}; source ${scriptaddr}
boot_extlinux=sysboot ${devtype} ${mender_uboot_dev}:${bootpart} any ${scriptaddr} ${prefix}extlinux/extlinux.conf
boot_prefixes=/ /boot/
boot_script_dhcp=boot.scr.uimg
boot_scripts=boot.scr.uimg boot.scr
boot_targets=fel mmc0 scsi0 usb0 pxe dhcp
bootcmd=run mender_setup; run distro_bootcmd
bootcmd_dhcp=usb start; if dhcp ${scriptaddr} ${boot_script_dhcp}; then source ${scriptaddr}; fi
bootcmd_fel=if test -n ${fel_booted} && test -n ${fel_scriptaddr}; then echo '(FEL boot)'; source ${fel_scriptaddr}; fi
bootcmd_mmc0=setenv mender_uboot_dev 0; run mmc_boot
bootcmd_pxe=usb start; dhcp; if pxe get; then pxe boot; fi
bootcmd_scsi0=setenv mender_uboot_dev 0; run scsi_boot
bootcmd_usb0=setenv mender_uboot_dev 0; run usb_boot
bootcount=1
bootdelay=2
bootlimit=1
bootm_size=0xa000000
console=ttyS0,115200
distro_bootcmd=setenv scsi_need_init; for target in ${boot_targets}; do run bootcmd_${target}; done
ethaddr=02:99:08:40:e1:ce
fdt_addr_r=0x43000000
fdtfile=sun7i-a20-olinuxino-lime.dtb
kernel_addr_r=0x42000000
mender_altbootcmd=if test ${mender_boot_part} = 2; then setenv mender_boot_part 3; else setenv mender_boot_part 2; fi; setenv upgrade_available 0; saveenv; run mender_setup
mender_boot_part=2
mender_setup=setenv mender_kernel_root /dev/mmcblk0p${mender_boot_part}; setenv mender_uboot_root mmc 0:${mender_boot_part}; setenv expand_bootargs setenv bootargs ${bootargs}; run expand_bootargs; setenv expand_bootargs
mender_try_to_recover=if test ${upgrade_available} = 1; then reset; fi
mender_uboot_boot=mmc 0:1
mender_uboot_dev=0
mender_uboot_if=mmc
mmc_boot=if mmc dev ${mender_uboot_dev}; then setenv devtype mmc; run scan_dev_for_boot_part; fi
preboot=usb start
pxefile_addr_r=0x43200000
ramdisk_addr_r=0x43300000
scan_dev_for_boot=echo Scanning ${devtype} ${mender_uboot_dev}:${bootpart}...; for prefix in ${boot_prefixes}; do run scan_dev_for_extlinux; run scan_dev_for_scripts; done
scan_dev_for_boot_part=part list ${devtype} ${mender_uboot_dev} -bootable devplist; env exists devplist || setenv devplist 1; for bootpart in ${devplist}; do if fstype ${devtype} ${mender_uboot_dev}:${bootpart} bootfstype; then run scan_dev_for_boot; fi; done
scan_dev_for_extlinux=if test -e ${devtype} ${mender_uboot_dev}:${bootpart} ${prefix}extlinux/extlinux.conf; then echo Found ${prefix}extlinux/extlinux.conf; run boot_extlinux; echo SCRIPT FAILED: continuing...; fi
scan_dev_for_scripts=for script in ${boot_scripts}; do if test -e ${devtype} ${mender_uboot_dev}:${bootpart} ${prefix}${script}; then echo Found U-Boot script ${prefix}${script}; run boot_a_script; echo SCRIPT FAILED: continuing...; fi; done
scriptaddr=0x43100000
scsi_boot=run scsi_init; if scsi dev ${mender_uboot_dev}; then setenv devtype scsi; run scan_dev_for_boot_part; fi
scsi_init=if ${scsi_need_init}; then setenv scsi_need_init false; scsi scan; fi
serial#=165166990840e1ce
stderr=serial,vga
stdin=serial,usbkbd
stdout=serial,vga
usb_boot=usb start; if usb dev ${mender_uboot_dev}; then setenv devtype usb; run scan_dev_for_boot_part; fi
upgrade_available=0
